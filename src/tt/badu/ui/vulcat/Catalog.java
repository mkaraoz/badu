
package tt.badu.ui.vulcat;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import tt.badu.db.Database;
import core.reporter.Severity;
import core.reporter.Vulnerability;
import tt.badu.ui.master.UpdateCallback;

/**
 *
 * @author mk
 */
public class Catalog extends javax.swing.JFrame {

    private UpdateCallback callback;
    private List<Vulnerability> vulcatList = new ArrayList<>();
    private int lastIndex = 0;
    private boolean isEditing = false;

    /**
     * Creates new form Main
     */
    public Catalog(UpdateCallback callback) {
        this.callback = callback;
        initComponents();
        start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>(new DefaultListModel<Vulnerability>());
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taBody = new javax.swing.JTextArea();
        tTitleBox = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbSeverity = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taRecommendation = new javax.swing.JTextArea();
        bDelete = new javax.swing.JButton();
        bAdd = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Katalog");

        jSplitPane1.setDividerLocation(300);

        jList.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jPanel1.setBackground(new java.awt.Color(194, 123, 52));
        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        taBody.setEditable(false);
        taBody.setColumns(20);
        taBody.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        taBody.setLineWrap(true);
        taBody.setRows(5);
        taBody.setToolTipText("Açıklama...");
        taBody.setWrapStyleWord(true);
        taBody.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taBodyKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(taBody);

        tTitleBox.setEditable(false);
        tTitleBox.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N

        jLabel1.setText("Severity");

        cbSeverity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACİL", "KRİTİK", "YÜKSEK", "ORTA", "DÜŞÜK" }));
        cbSeverity.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tTitleBox)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSeverity, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tTitleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSeverity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);

        jLabel2.setText("Çözüm Önerisi");

        taRecommendation.setEditable(false);
        taRecommendation.setColumns(20);
        taRecommendation.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        taRecommendation.setLineWrap(true);
        taRecommendation.setWrapStyleWord(true);
        taRecommendation.setRows(5);
        taRecommendation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taRecommendationKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(taRecommendation);

        bDelete.setText("Delete");
        bDelete.setPreferredSize(new java.awt.Dimension(100, 29));
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bAdd.setText("Add");
        bAdd.setPreferredSize(new java.awt.Dimension(100, 29));
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bSave.setText("Save");
        bSave.setEnabled(false);
        bSave.setPreferredSize(new java.awt.Dimension(100, 29));
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bEdit.setText("Edit");
        bEdit.setPreferredSize(new java.awt.Dimension(100, 29));
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 438, Short.MAX_VALUE)
                                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel3);

        jSplitPane1.setRightComponent(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 899, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
        tTitleBox.setEditable(true);
        cbSeverity.setEditable(true);
        taBody.setEditable(true);
        taRecommendation.setEditable(true);

        bEdit.setEnabled(false);
        bSave.setEnabled(true);
        bAdd.setEnabled(false);
        bDelete.setEnabled(false);

        isEditing = true;
    }//GEN-LAST:event_bEditActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        String action = bAdd.getText();
        if (action.equals("Add")) {
            add();
        } else {
            cancel();
        }
    }//GEN-LAST:event_bAddActionPerformed

    private void jListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListValueChanged
        Vulnerability v = jList.getSelectedValue();
        fillUI(v);
    }//GEN-LAST:event_jListValueChanged

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        bEdit.setEnabled(true);
        bSave.setEnabled(false);
        bAdd.setEnabled(true);
        bDelete.setEnabled(true);
        bAdd.setText("Add");

        String title = tTitleBox.getText().trim();
        String severity = String.valueOf(cbSeverity.getSelectedItem());
        String body = taBody.getText().trim();
        String recommendation = taRecommendation.getText().trim();

        if (title.equals("") || body.equals("")) {
            return;
        }

        if (isEditing) {
            Vulnerability v = jList.getSelectedValue();
            delete(v);
        }

        Vulnerability v = new Vulnerability(title, Severity.get(severity), body, recommendation);
        boolean result = Database.init().insert(v);
        if (result) {
            addToList(v);
            JOptionPane.showMessageDialog(this, "Kaydedildi", "OK", JOptionPane.INFORMATION_MESSAGE);
            callback.update("Katalaog güncelleme, Yeni Zafiyet: " + v.getTitle());
        } else {
            JOptionPane.showMessageDialog(this, "Kayıt Basarisiz", "HATA", JOptionPane.ERROR_MESSAGE);
        }

        jList.setSelectedIndex(jList.getModel().getSize() - 1);

        isEditing = false;
    }//GEN-LAST:event_bSaveActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        lastIndex = jList.getSelectedIndex();
        Vulnerability v = jList.getSelectedValue();
        delete(v);
        callback.update("Katalaog güncelleme, Zafiyet Silindi: " + v.getTitle());

        int size = jList.getModel().getSize();
        if (size == 0) {
            return;
        } else if (lastIndex == 0) {
            jList.setSelectedIndex(0);
        } else {
            jList.setSelectedIndex(lastIndex - 1);
        };
    }//GEN-LAST:event_bDeleteActionPerformed

    private void taBodyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taBodyKeyPressed
        consumeTabKey(evt, taBody);
    }//GEN-LAST:event_taBodyKeyPressed

    private void taRecommendationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taRecommendationKeyPressed
        consumeTabKey(evt, taRecommendation);
    }//GEN-LAST:event_taRecommendationKeyPressed

    private void consumeTabKey(java.awt.event.KeyEvent evt, JTextArea jta) {
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            if (evt.getModifiers() > 0) {
                jta.transferFocusBackward();
            } else {
                jta.transferFocus();
            }
            evt.consume();
        }
    }

    private void delete(Vulnerability v) {
        if (v == null) {
            return;
        }
        boolean result = Database.init().delete(v);
        if (!isEditing) {
            if (result) {
                JOptionPane.showMessageDialog(this, "Silindi", "OK", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Kayıt Silinemedi", "HATA", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

        DefaultListModel model = (DefaultListModel) jList.getModel();
        int selectedIndex = jList.getSelectedIndex();
        if (selectedIndex != -1) {
            model.remove(selectedIndex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bSave;
    private javax.swing.JComboBox<String> cbSeverity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<Vulnerability> jList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField tTitleBox;
    private javax.swing.JTextArea taBody;
    private javax.swing.JTextArea taRecommendation;
    // End of variables declaration//GEN-END:variables

    private void start() {
        vulcatList = Database.init().selectAll();
        addToList(vulcatList);

        jList.setSelectedIndex(0);

        if (jList.getModel().getSize() == 0) {
            bEdit.setEnabled(false);
            bSave.setEnabled(false);
            bAdd.setEnabled(true);
        }
    }

    private void addToList(Vulnerability v) {
        ((DefaultListModel) jList.getModel()).addElement(v);
    }

    private void addToList(List<Vulnerability> vulcatList) {
        for (Vulnerability v : vulcatList) {
            addToList(v);
        }
    }

    private void fillUI(Vulnerability v) {
        if (v == null) {
            return;
        }
        tTitleBox.setText(v.getTitle());
        int index;
        switch (v.getSeverity()) {
            case ACIL:
                index = 0;
                break;
            case KRITIK:
                index = 1;
                break;
            case YUKSEK:
                index = 2;
                break;
            case ORTA:
                index = 3;
                break;
            case DUSUK:
                index = 4;
                break;
            default:
                index = 3;
        }
        cbSeverity.setSelectedIndex(index);
        taBody.setText(v.getBody());
        taRecommendation.setText(v.getRecommendation());
    }

    private void add() {
        lastIndex = jList.getSelectedIndex();

        bAdd.setText("Cancel");

        bEdit.setEnabled(false);
        bSave.setEnabled(true);
        bAdd.setEnabled(true);
        bDelete.setEnabled(false);

        tTitleBox.setText("");
        tTitleBox.setEditable(true);

        cbSeverity.setSelectedIndex(0);
        cbSeverity.setEditable(true);

        taBody.setText("");
        taBody.setEditable(true);

        taRecommendation.setText("");
        taRecommendation.setEditable(true);
    }

    private void cancel() {
        bAdd.setText("Add");

        bEdit.setEnabled(true);
        bSave.setEnabled(false);
        bAdd.setEnabled(true);
        bDelete.setEnabled(true);

        jList.setSelectedIndex(lastIndex);
    }
}
